$date
	Mon Apr 14 09:35:25 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module multi_bcd_adder_tb $end
$var wire 8 ! Sum [7:0] $end
$var wire 1 " Cout $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$var reg 1 % Cin $end
$scope function bcd_to_decimal $end
$var reg 8 & bcd [7:0] $end
$upscope $end
$scope module uut $end
$var wire 8 ' A [7:0] $end
$var wire 8 ( B [7:0] $end
$var wire 1 % Cin $end
$var wire 4 ) sum_low [3:0] $end
$var wire 4 * sum_high [3:0] $end
$var wire 1 + carry_low $end
$var wire 8 , Sum [7:0] $end
$var wire 1 " Cout $end
$scope module bcd_high $end
$var wire 4 - A [3:0] $end
$var wire 4 . B [3:0] $end
$var wire 1 " Cout $end
$var wire 4 / Sum [3:0] $end
$var wire 5 0 temp_sum [4:0] $end
$var wire 1 1 correction_needed $end
$var wire 4 2 corrected_sum [3:0] $end
$var wire 1 + Cin $end
$upscope $end
$scope module bcd_low $end
$var wire 4 3 A [3:0] $end
$var wire 4 4 B [3:0] $end
$var wire 1 % Cin $end
$var wire 1 + Cout $end
$var wire 4 5 Sum [3:0] $end
$var wire 5 6 temp_sum [4:0] $end
$var wire 1 7 correction_needed $end
$var wire 4 8 corrected_sum [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1000 8
07
b1000 6
b1000 5
b11 4
b101 3
b0 2
01
b0 0
b0 /
b0 .
b0 -
b1000 ,
0+
b0 *
b1000 )
b11 (
b101 '
bx &
0%
b11 $
b101 #
0"
b1000 !
$end
#10000
b1 *
b1 /
b1 2
b10000 !
b10000 ,
b0 )
b0 5
b0 8
b1 4
b1 0
1+
17
b1010 6
b1001 3
b1 $
b1 (
b1001 #
b1001 '
b1000 &
#20000
b10 )
b10 5
b10 8
b110010 !
b110010 ,
b11 *
b11 /
b11 2
b110 4
b1 .
1+
17
b1100 6
b110 3
b11 0
b1 -
b10110 $
b10110 (
b10110 #
b10110 '
b10000 &
#30000
b100 *
b100 /
b100 2
b1000000 !
b1000000 ,
b0 )
b0 5
b0 8
b101 4
b100 3
b100 0
b10 -
b1010 6
1%
b10101 $
b10101 (
b100100 #
b100100 '
b110010 &
#40000
b1001 )
b1001 5
b1001 8
b10011001 !
b10011001 ,
b1001 *
b1001 /
b1001 2
b1001 4
b1001 .
b10011 6
b1001 3
1"
11
b10011 0
b1001 -
b10011001 $
b10011001 (
b10011001 #
b10011001 '
b1000000 &
#50000
b10011001 &
